name: Deploy to production
on:
  release:
    tags:
     - v*
    types: [ released, edited ]
jobs:
  deploy-on-latest:
    if: (github.event.action == 'edited' && github.event.changes.make_latest.to) || github.event.action == 'released'
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/graphql-action@v2.x
        id: get_latest_release
        with:
          query: |
            query release($owner:String!,$repo:String!,$tag:String!) {
              repository(owner:$owner,name:$repo) {
                release(tagName:$tag) {
                  isLatest
                }
              }
            }
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          tag: ${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Export isLatest as env var
        run: echo "IS_LATEST_RELEASE=${{ fromJSON(steps.get_latest_release.outputs.data).repository.release.isLatest }}" >> $GITHUB_ENV
      - run: echo "IS_LATEST_RELEASE=${{ env.IS_LATEST_RELEASE }}"
      - run: echo "${IS_LATEST_RELEASE}"
      - if: env.IS_LATEST_RELEASE
        run: echo "This is the latest release, i.e. we should deploy it."
      - if: env.IS_LATEST_RELEASE == false
        run: |
          echo "::error file=release_flow.yml::This is not the latest release, i.e. we should not deploy it."
          exit 1
